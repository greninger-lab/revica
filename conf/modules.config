/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

if (!params.skip_fastqc) {
    process {
        withName: 'FASTQ_TRIM_FASTP_FASTQC:FASTQC_RAW' {
            ext.args = '--quiet'
            publishDir = [
                path: { "${params.output}/fastqc/raw" },
                mode: 'copy',
				pattern:"*.{html,zip}"
            ]
        }
    }
}

if (!params.skip_fastp) {
    process {
        withName: 'FASTQ_TRIM_FASTP_FASTQC:FASTP' {
            ext.args = { "--cut_front --cut_tail --trim_poly_x --cut_mean_quality 20 --qualified_quality_phred 20 --unqualified_percent_limit 20 --length_required ${params.trim_len}" }
            publishDir = [
                [
                    path: { "${params.output}/fastp/log" },
                    mode: 'copy',
                    pattern: "*.{json,html,log}"
                ],
               	[
                    path: { "${params.output}/fastp/fastq_trimmed" },
                    mode: 'copy',
                    pattern: "*.fastp.fastq.gz",
                    enabled: params.save_trimmed_reads
                ],
                [
                    path: { "${params.output}/fastp/trimmed_fail" },
                    mode: 'copy',
                    pattern: "*.fail.fastq.gz",
                    enabled: params.save_trimmed_fail
                ]
            ]
        }
    }

    if (!params.skip_fastqc) {
		process {
			withName: 'FASTQ_TRIM_FASTP_FASTQC:FASTQC_TRIM' {
				ext.args = '--quiet'
				publishDir = [
					path: { "${params.output}/fastqc/trim" },
					mode: 'copy',
					pattern:"*.{html,zip}"
				]
			}
		}
    }
}

if (params.sample) {
    process {
        withName: SEQTK_SAMPLE {
            publishDir = [
                path: { "${params.output}/seqtk_sample" },
                mode: 'copy',
				pattern:"*.fastq.gz",
				enabled: params.save_sample_reads
            ]
        }
    }
}

// Multifasta Alignment and Reference Prep
process {
    withName: 'REFERENCE_PREP:BBMAP_ALIGN_DB' {
		ext.args = 'local=true maxindel=80 ambiguous=all'
        publishDir = [ 
			[
				path: { "${params.output}/bbmap_align_db/covstats" },
				mode: 'copy',
				pattern: "*.tsv"
			],
			[
				path: { "${params.output}/bbmap_align_db/log" },
				mode: 'copy',
				pattern: "*.log"
			]
		]
    }

	withName: 'REFERENCE_PREP:SELECT_REFERENCE' {
		ext.args = { "-m ${params.ref_min_median_cov} -p ${params.ref_min_genome_cov}" }
		publishDir = [
			[
				path: { "${params.output}/select_reference" },
				mode: 'copy',
				pattern: "*_refs.tsv"
			],
			[
				path: { "${params.output}/failed_assembly" },
				mode: 'copy',
				pattern: "*_failed_assembly.tsv"
			]
		]
	}

	withName: 'REFERENCE_PREP:MAKE_REFERENCE_FASTA' {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}" }
		publishDir = [
			path: { "${params.output}/ref_genomes" },
			mode: 'copy',
			pattern: "*.fa"
		]
	}
}

// Consensus Assembly
process {

	withName: 'CONSENSUS_ASSEMBLY:BBMAP_ALIGN_REFERENCE' {
		ext.args = 'local=true ambiguous=random'	
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_ref" }
		publishDir = [
			path: { "${params.output}/bbmap_align/ref" },
			mode: 'copy',
			pattern: "*.{bam,bai}"
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_1:IVAR_CONSENSUS' {
		ext.args = { "-t ${params.ivar_consensus_t} -q ${params.ivar_consensus_q} -m 1 -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 0 -aa'
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus1" }
		publishDir = [ 
			path: { "${params.output}/ivar_consensus/intermediate_consensus" },
			mode: 'copy',
			pattern: "*.fa",
			enabled: params.save_intermediate_consensus
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_1:BBMAP_ALIGN' {
		ext.args = 'local=true ambiguous=random'	
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus1" }
		publishDir = [
			path: { "${params.output}/bbmap_align/intermediate_bam" },
			mode: 'copy',
			pattern: "*.{bam,bai}",
			enabled: params.save_intermediate_consensus
		]
	}
	
	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_2:IVAR_CONSENSUS' {
		ext.args = { "-t ${params.ivar_consensus_t} -q ${params.ivar_consensus_q} -m 1 -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 0 -aa'
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus2" }
		publishDir = [ 
			path: { "${params.output}/ivar_consensus/intermediate_consensus" },
			mode: 'copy',
			pattern: "*.fa",
			enabled: params.save_intermediate_consensus
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_2:BBMAP_ALIGN' {
		ext.args = 'local=true ambiguous=random'	
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus2" }
		publishDir = [
			path: { "${params.output}/bbmap_align/intermediate_bam" },
			mode: 'copy',
			pattern: "*.{bam,bai}",
			enabled: params.save_intermediate_consensus
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_FINAL:IVAR_CONSENSUS' {
		ext.args = { "-t ${params.ivar_consensus_t} -q ${params.ivar_consensus_q} -m ${params.ivar_consensus_m} -n N" }
		ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 0 -aa'
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus_final" }
		publishDir = [ 
			path: { "${params.output}/ivar_consensus" },
			mode: 'copy',
			pattern: "*.fa"
		]
	}

	withName: '.*:IVAR_CONSENSUS_BBMAP_ALIGN_FINAL:BBMAP_ALIGN' {
		ext.args = 'local=true ambiguous=random'	
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}_consensus_final" }
		publishDir = [
			path: { "${params.output}/bbmap_align/consensus" },
			mode: 'copy',
			pattern: "*.{bam,bai}"
		]
	}
}

process {
	withName: SUMMARY {
		ext.prefix = { "${meta.id}_${ref_info.acc}_${ref_info.tag}" }
		publishDir = [
			path: { "${params.output}/summary" },
			mode: 'copy',
			pattern: "*.tsv"
		]
	}
}

process {
	withName: REPORT_FAILED_SAMPLES {
		publishDir = [
			path: { "${params.output}" },
			mode: 'copy',
			pattern: "${params.run_name}_summary.tsv"
		]
	}
}
